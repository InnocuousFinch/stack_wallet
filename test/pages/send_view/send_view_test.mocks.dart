// Mocks generated by Mockito 5.3.2 from annotations
// in stackwallet/test/pages/send_view/send_view_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i21;
import 'dart:typed_data' as _i27;
import 'dart:ui' as _i23;

import 'package:bip47/bip47.dart' as _i17;
import 'package:bitcoindart/bitcoindart.dart' as _i14;
import 'package:flutter/foundation.dart' as _i4;
import 'package:flutter_riverpod/flutter_riverpod.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:stackwallet/db/main_db.dart' as _i13;
import 'package:stackwallet/electrumx_rpc/cached_electrumx.dart' as _i11;
import 'package:stackwallet/electrumx_rpc/electrumx.dart' as _i10;
import 'package:stackwallet/models/balance.dart' as _i12;
import 'package:stackwallet/models/isar/models/isar_models.dart' as _i16;
import 'package:stackwallet/models/node_model.dart' as _i24;
import 'package:stackwallet/models/paymint/fee_object_model.dart' as _i9;
import 'package:stackwallet/pages/exchange_view/sub_widgets/exchange_rate_sheet.dart'
    as _i30;
import 'package:stackwallet/services/coins/bitcoin/bitcoin_wallet.dart' as _i25;
import 'package:stackwallet/services/coins/coin_service.dart' as _i18;
import 'package:stackwallet/services/coins/manager.dart' as _i6;
import 'package:stackwallet/services/locale_service.dart' as _i28;
import 'package:stackwallet/services/node_service.dart' as _i3;
import 'package:stackwallet/services/transaction_notification_tracker.dart'
    as _i8;
import 'package:stackwallet/services/wallets.dart' as _i19;
import 'package:stackwallet/services/wallets_service.dart' as _i2;
import 'package:stackwallet/utilities/enums/backup_frequency_type.dart' as _i31;
import 'package:stackwallet/utilities/enums/coin_enum.dart' as _i20;
import 'package:stackwallet/utilities/enums/derive_path_type_enum.dart' as _i26;
import 'package:stackwallet/utilities/enums/sync_type_enum.dart' as _i29;
import 'package:stackwallet/utilities/flutter_secure_storage_interface.dart'
    as _i7;
import 'package:stackwallet/utilities/prefs.dart' as _i22;
import 'package:tuple/tuple.dart' as _i15;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeWalletsService_0 extends _i1.SmartFake
    implements _i2.WalletsService {
  _FakeWalletsService_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNodeService_1 extends _i1.SmartFake implements _i3.NodeService {
  _FakeNodeService_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeChangeNotifierProvider_2<Notifier extends _i4.ChangeNotifier?>
    extends _i1.SmartFake implements _i5.ChangeNotifierProvider<Notifier> {
  _FakeChangeNotifierProvider_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeManager_3 extends _i1.SmartFake implements _i6.Manager {
  _FakeManager_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSecureStorageInterface_4 extends _i1.SmartFake
    implements _i7.SecureStorageInterface {
  _FakeSecureStorageInterface_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTransactionNotificationTracker_5 extends _i1.SmartFake
    implements _i8.TransactionNotificationTracker {
  _FakeTransactionNotificationTracker_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFeeObject_6 extends _i1.SmartFake implements _i9.FeeObject {
  _FakeFeeObject_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeElectrumX_7 extends _i1.SmartFake implements _i10.ElectrumX {
  _FakeElectrumX_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCachedElectrumX_8 extends _i1.SmartFake
    implements _i11.CachedElectrumX {
  _FakeCachedElectrumX_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBalance_9 extends _i1.SmartFake implements _i12.Balance {
  _FakeBalance_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMainDB_10 extends _i1.SmartFake implements _i13.MainDB {
  _FakeMainDB_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNetworkType_11 extends _i1.SmartFake implements _i14.NetworkType {
  _FakeNetworkType_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeElectrumXNode_12 extends _i1.SmartFake
    implements _i10.ElectrumXNode {
  _FakeElectrumXNode_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTuple2_13<T1, T2> extends _i1.SmartFake
    implements _i15.Tuple2<T1, T2> {
  _FakeTuple2_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAddress_14 extends _i1.SmartFake implements _i16.Address {
  _FakeAddress_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePaymentCode_15 extends _i1.SmartFake implements _i17.PaymentCode {
  _FakePaymentCode_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCoinServiceAPI_16 extends _i1.SmartFake
    implements _i18.CoinServiceAPI {
  _FakeCoinServiceAPI_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Wallets].
///
/// See the documentation for Mockito's code generation for more information.
class MockWallets extends _i1.Mock implements _i19.Wallets {
  MockWallets() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.WalletsService get walletsService => (super.noSuchMethod(
        Invocation.getter(#walletsService),
        returnValue: _FakeWalletsService_0(
          this,
          Invocation.getter(#walletsService),
        ),
      ) as _i2.WalletsService);
  @override
  set walletsService(_i2.WalletsService? _walletsService) => super.noSuchMethod(
        Invocation.setter(
          #walletsService,
          _walletsService,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.NodeService get nodeService => (super.noSuchMethod(
        Invocation.getter(#nodeService),
        returnValue: _FakeNodeService_1(
          this,
          Invocation.getter(#nodeService),
        ),
      ) as _i3.NodeService);
  @override
  set nodeService(_i3.NodeService? _nodeService) => super.noSuchMethod(
        Invocation.setter(
          #nodeService,
          _nodeService,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get hasWallets => (super.noSuchMethod(
        Invocation.getter(#hasWallets),
        returnValue: false,
      ) as bool);
  @override
  List<_i5.ChangeNotifierProvider<_i6.Manager>> get managerProviders =>
      (super.noSuchMethod(
        Invocation.getter(#managerProviders),
        returnValue: <_i5.ChangeNotifierProvider<_i6.Manager>>[],
      ) as List<_i5.ChangeNotifierProvider<_i6.Manager>>);
  @override
  List<_i6.Manager> get managers => (super.noSuchMethod(
        Invocation.getter(#managers),
        returnValue: <_i6.Manager>[],
      ) as List<_i6.Manager>);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<String> getWalletIdsFor({required _i20.Coin? coin}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWalletIdsFor,
          [],
          {#coin: coin},
        ),
        returnValue: <String>[],
      ) as List<String>);
  @override
  Map<_i20.Coin, List<_i5.ChangeNotifierProvider<_i6.Manager>>>
      getManagerProvidersByCoin() => (super.noSuchMethod(
            Invocation.method(
              #getManagerProvidersByCoin,
              [],
            ),
            returnValue: <_i20.Coin,
                List<_i5.ChangeNotifierProvider<_i6.Manager>>>{},
          ) as Map<_i20.Coin, List<_i5.ChangeNotifierProvider<_i6.Manager>>>);
  @override
  List<_i5.ChangeNotifierProvider<_i6.Manager>> getManagerProvidersForCoin(
          _i20.Coin? coin) =>
      (super.noSuchMethod(
        Invocation.method(
          #getManagerProvidersForCoin,
          [coin],
        ),
        returnValue: <_i5.ChangeNotifierProvider<_i6.Manager>>[],
      ) as List<_i5.ChangeNotifierProvider<_i6.Manager>>);
  @override
  _i5.ChangeNotifierProvider<_i6.Manager> getManagerProvider(
          String? walletId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getManagerProvider,
          [walletId],
        ),
        returnValue: _FakeChangeNotifierProvider_2<_i6.Manager>(
          this,
          Invocation.method(
            #getManagerProvider,
            [walletId],
          ),
        ),
      ) as _i5.ChangeNotifierProvider<_i6.Manager>);
  @override
  _i6.Manager getManager(String? walletId) => (super.noSuchMethod(
        Invocation.method(
          #getManager,
          [walletId],
        ),
        returnValue: _FakeManager_3(
          this,
          Invocation.method(
            #getManager,
            [walletId],
          ),
        ),
      ) as _i6.Manager);
  @override
  void addWallet({
    required String? walletId,
    required _i6.Manager? manager,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #addWallet,
          [],
          {
            #walletId: walletId,
            #manager: manager,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeWallet({required String? walletId}) => super.noSuchMethod(
        Invocation.method(
          #removeWallet,
          [],
          {#walletId: walletId},
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i21.Future<void> load(_i22.Prefs? prefs) => (super.noSuchMethod(
        Invocation.method(
          #load,
          [prefs],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<void> loadAfterStackRestore(
    _i22.Prefs? prefs,
    List<_i6.Manager>? managers,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadAfterStackRestore,
          [
            prefs,
            managers,
          ],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  void addListener(_i23.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i23.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [WalletsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockWalletsService extends _i1.Mock implements _i2.WalletsService {
  MockWalletsService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i21.Future<Map<String, _i2.WalletInfo>> get walletNames =>
      (super.noSuchMethod(
        Invocation.getter(#walletNames),
        returnValue: _i21.Future<Map<String, _i2.WalletInfo>>.value(
            <String, _i2.WalletInfo>{}),
      ) as _i21.Future<Map<String, _i2.WalletInfo>>);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i21.Future<bool> renameWallet({
    required String? from,
    required String? to,
    required bool? shouldNotifyListeners,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #renameWallet,
          [],
          {
            #from: from,
            #to: to,
            #shouldNotifyListeners: shouldNotifyListeners,
          },
        ),
        returnValue: _i21.Future<bool>.value(false),
      ) as _i21.Future<bool>);
  @override
  _i21.Future<void> addExistingStackWallet({
    required String? name,
    required String? walletId,
    required _i20.Coin? coin,
    required bool? shouldNotifyListeners,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addExistingStackWallet,
          [],
          {
            #name: name,
            #walletId: walletId,
            #coin: coin,
            #shouldNotifyListeners: shouldNotifyListeners,
          },
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<String?> addNewWallet({
    required String? name,
    required _i20.Coin? coin,
    required bool? shouldNotifyListeners,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addNewWallet,
          [],
          {
            #name: name,
            #coin: coin,
            #shouldNotifyListeners: shouldNotifyListeners,
          },
        ),
        returnValue: _i21.Future<String?>.value(),
      ) as _i21.Future<String?>);
  @override
  _i21.Future<List<String>> getFavoriteWalletIds() => (super.noSuchMethod(
        Invocation.method(
          #getFavoriteWalletIds,
          [],
        ),
        returnValue: _i21.Future<List<String>>.value(<String>[]),
      ) as _i21.Future<List<String>>);
  @override
  _i21.Future<void> saveFavoriteWalletIds(List<String>? walletIds) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveFavoriteWalletIds,
          [walletIds],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<void> addFavorite(String? walletId) => (super.noSuchMethod(
        Invocation.method(
          #addFavorite,
          [walletId],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<void> removeFavorite(String? walletId) => (super.noSuchMethod(
        Invocation.method(
          #removeFavorite,
          [walletId],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<void> moveFavorite({
    required int? fromIndex,
    required int? toIndex,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #moveFavorite,
          [],
          {
            #fromIndex: fromIndex,
            #toIndex: toIndex,
          },
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<bool> checkForDuplicate(String? name) => (super.noSuchMethod(
        Invocation.method(
          #checkForDuplicate,
          [name],
        ),
        returnValue: _i21.Future<bool>.value(false),
      ) as _i21.Future<bool>);
  @override
  _i21.Future<String?> getWalletId(String? walletName) => (super.noSuchMethod(
        Invocation.method(
          #getWalletId,
          [walletName],
        ),
        returnValue: _i21.Future<String?>.value(),
      ) as _i21.Future<String?>);
  @override
  _i21.Future<bool> isMnemonicVerified({required String? walletId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #isMnemonicVerified,
          [],
          {#walletId: walletId},
        ),
        returnValue: _i21.Future<bool>.value(false),
      ) as _i21.Future<bool>);
  @override
  _i21.Future<void> setMnemonicVerified({required String? walletId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #setMnemonicVerified,
          [],
          {#walletId: walletId},
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<int> deleteWallet(
    String? name,
    bool? shouldNotifyListeners,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteWallet,
          [
            name,
            shouldNotifyListeners,
          ],
        ),
        returnValue: _i21.Future<int>.value(0),
      ) as _i21.Future<int>);
  @override
  _i21.Future<void> refreshWallets(bool? shouldNotifyListeners) =>
      (super.noSuchMethod(
        Invocation.method(
          #refreshWallets,
          [shouldNotifyListeners],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  void addListener(_i23.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i23.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [NodeService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNodeService extends _i1.Mock implements _i3.NodeService {
  MockNodeService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.SecureStorageInterface get secureStorageInterface => (super.noSuchMethod(
        Invocation.getter(#secureStorageInterface),
        returnValue: _FakeSecureStorageInterface_4(
          this,
          Invocation.getter(#secureStorageInterface),
        ),
      ) as _i7.SecureStorageInterface);
  @override
  List<_i24.NodeModel> get primaryNodes => (super.noSuchMethod(
        Invocation.getter(#primaryNodes),
        returnValue: <_i24.NodeModel>[],
      ) as List<_i24.NodeModel>);
  @override
  List<_i24.NodeModel> get nodes => (super.noSuchMethod(
        Invocation.getter(#nodes),
        returnValue: <_i24.NodeModel>[],
      ) as List<_i24.NodeModel>);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i21.Future<void> updateDefaults() => (super.noSuchMethod(
        Invocation.method(
          #updateDefaults,
          [],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<void> setPrimaryNodeFor({
    required _i20.Coin? coin,
    required _i24.NodeModel? node,
    bool? shouldNotifyListeners = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setPrimaryNodeFor,
          [],
          {
            #coin: coin,
            #node: node,
            #shouldNotifyListeners: shouldNotifyListeners,
          },
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i24.NodeModel? getPrimaryNodeFor({required _i20.Coin? coin}) =>
      (super.noSuchMethod(Invocation.method(
        #getPrimaryNodeFor,
        [],
        {#coin: coin},
      )) as _i24.NodeModel?);
  @override
  List<_i24.NodeModel> getNodesFor(_i20.Coin? coin) => (super.noSuchMethod(
        Invocation.method(
          #getNodesFor,
          [coin],
        ),
        returnValue: <_i24.NodeModel>[],
      ) as List<_i24.NodeModel>);
  @override
  _i24.NodeModel? getNodeById({required String? id}) =>
      (super.noSuchMethod(Invocation.method(
        #getNodeById,
        [],
        {#id: id},
      )) as _i24.NodeModel?);
  @override
  List<_i24.NodeModel> failoverNodesFor({required _i20.Coin? coin}) =>
      (super.noSuchMethod(
        Invocation.method(
          #failoverNodesFor,
          [],
          {#coin: coin},
        ),
        returnValue: <_i24.NodeModel>[],
      ) as List<_i24.NodeModel>);
  @override
  _i21.Future<void> add(
    _i24.NodeModel? node,
    String? password,
    bool? shouldNotifyListeners,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #add,
          [
            node,
            password,
            shouldNotifyListeners,
          ],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<void> delete(
    String? id,
    bool? shouldNotifyListeners,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [
            id,
            shouldNotifyListeners,
          ],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<void> setEnabledState(
    String? id,
    bool? enabled,
    bool? shouldNotifyListeners,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setEnabledState,
          [
            id,
            enabled,
            shouldNotifyListeners,
          ],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<void> edit(
    _i24.NodeModel? editedNode,
    String? password,
    bool? shouldNotifyListeners,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #edit,
          [
            editedNode,
            password,
            shouldNotifyListeners,
          ],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<void> updateCommunityNodes() => (super.noSuchMethod(
        Invocation.method(
          #updateCommunityNodes,
          [],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  void addListener(_i23.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i23.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [BitcoinWallet].
///
/// See the documentation for Mockito's code generation for more information.
class MockBitcoinWallet extends _i1.Mock implements _i25.BitcoinWallet {
  MockBitcoinWallet() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set timer(_i21.Timer? _timer) => super.noSuchMethod(
        Invocation.setter(
          #timer,
          _timer,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i8.TransactionNotificationTracker get txTracker => (super.noSuchMethod(
        Invocation.getter(#txTracker),
        returnValue: _FakeTransactionNotificationTracker_5(
          this,
          Invocation.getter(#txTracker),
        ),
      ) as _i8.TransactionNotificationTracker);
  @override
  set txTracker(_i8.TransactionNotificationTracker? _txTracker) =>
      super.noSuchMethod(
        Invocation.setter(
          #txTracker,
          _txTracker,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get longMutex => (super.noSuchMethod(
        Invocation.getter(#longMutex),
        returnValue: false,
      ) as bool);
  @override
  set longMutex(bool? _longMutex) => super.noSuchMethod(
        Invocation.setter(
          #longMutex,
          _longMutex,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get refreshMutex => (super.noSuchMethod(
        Invocation.getter(#refreshMutex),
        returnValue: false,
      ) as bool);
  @override
  set refreshMutex(bool? _refreshMutex) => super.noSuchMethod(
        Invocation.setter(
          #refreshMutex,
          _refreshMutex,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isActive => (super.noSuchMethod(
        Invocation.getter(#isActive),
        returnValue: false,
      ) as bool);
  @override
  set isActive(bool? _isActive) => super.noSuchMethod(
        Invocation.setter(
          #isActive,
          _isActive,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set isFavorite(bool? markFavorite) => super.noSuchMethod(
        Invocation.setter(
          #isFavorite,
          markFavorite,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isFavorite => (super.noSuchMethod(
        Invocation.getter(#isFavorite),
        returnValue: false,
      ) as bool);
  @override
  _i20.Coin get coin => (super.noSuchMethod(
        Invocation.getter(#coin),
        returnValue: _i20.Coin.bitcoin,
      ) as _i20.Coin);
  @override
  _i21.Future<List<_i16.UTXO>> get utxos => (super.noSuchMethod(
        Invocation.getter(#utxos),
        returnValue: _i21.Future<List<_i16.UTXO>>.value(<_i16.UTXO>[]),
      ) as _i21.Future<List<_i16.UTXO>>);
  @override
  _i21.Future<List<_i16.Transaction>> get transactions => (super.noSuchMethod(
        Invocation.getter(#transactions),
        returnValue:
            _i21.Future<List<_i16.Transaction>>.value(<_i16.Transaction>[]),
      ) as _i21.Future<List<_i16.Transaction>>);
  @override
  _i21.Future<String> get currentReceivingAddress => (super.noSuchMethod(
        Invocation.getter(#currentReceivingAddress),
        returnValue: _i21.Future<String>.value(''),
      ) as _i21.Future<String>);
  @override
  _i21.Future<String> get currentChangeAddress => (super.noSuchMethod(
        Invocation.getter(#currentChangeAddress),
        returnValue: _i21.Future<String>.value(''),
      ) as _i21.Future<String>);
  @override
  _i21.Future<String> get currentChangeAddressP2PKH => (super.noSuchMethod(
        Invocation.getter(#currentChangeAddressP2PKH),
        returnValue: _i21.Future<String>.value(''),
      ) as _i21.Future<String>);
  @override
  bool get hasCalledExit => (super.noSuchMethod(
        Invocation.getter(#hasCalledExit),
        returnValue: false,
      ) as bool);
  @override
  _i21.Future<_i9.FeeObject> get fees => (super.noSuchMethod(
        Invocation.getter(#fees),
        returnValue: _i21.Future<_i9.FeeObject>.value(_FakeFeeObject_6(
          this,
          Invocation.getter(#fees),
        )),
      ) as _i21.Future<_i9.FeeObject>);
  @override
  _i21.Future<int> get maxFee => (super.noSuchMethod(
        Invocation.getter(#maxFee),
        returnValue: _i21.Future<int>.value(0),
      ) as _i21.Future<int>);
  @override
  _i21.Future<List<String>> get mnemonic => (super.noSuchMethod(
        Invocation.getter(#mnemonic),
        returnValue: _i21.Future<List<String>>.value(<String>[]),
      ) as _i21.Future<List<String>>);
  @override
  _i21.Future<String?> get mnemonicString => (super.noSuchMethod(
        Invocation.getter(#mnemonicString),
        returnValue: _i21.Future<String?>.value(),
      ) as _i21.Future<String?>);
  @override
  _i21.Future<String?> get mnemonicPassphrase => (super.noSuchMethod(
        Invocation.getter(#mnemonicPassphrase),
        returnValue: _i21.Future<String?>.value(),
      ) as _i21.Future<String?>);
  @override
  _i21.Future<int> get chainHeight => (super.noSuchMethod(
        Invocation.getter(#chainHeight),
        returnValue: _i21.Future<int>.value(0),
      ) as _i21.Future<int>);
  @override
  int get storedChainHeight => (super.noSuchMethod(
        Invocation.getter(#storedChainHeight),
        returnValue: 0,
      ) as int);
  @override
  bool get shouldAutoSync => (super.noSuchMethod(
        Invocation.getter(#shouldAutoSync),
        returnValue: false,
      ) as bool);
  @override
  set shouldAutoSync(bool? shouldAutoSync) => super.noSuchMethod(
        Invocation.setter(
          #shouldAutoSync,
          shouldAutoSync,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isRefreshing => (super.noSuchMethod(
        Invocation.getter(#isRefreshing),
        returnValue: false,
      ) as bool);
  @override
  bool get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: false,
      ) as bool);
  @override
  String get walletId => (super.noSuchMethod(
        Invocation.getter(#walletId),
        returnValue: '',
      ) as String);
  @override
  String get walletName => (super.noSuchMethod(
        Invocation.getter(#walletName),
        returnValue: '',
      ) as String);
  @override
  set walletName(String? newName) => super.noSuchMethod(
        Invocation.setter(
          #walletName,
          newName,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i10.ElectrumX get electrumXClient => (super.noSuchMethod(
        Invocation.getter(#electrumXClient),
        returnValue: _FakeElectrumX_7(
          this,
          Invocation.getter(#electrumXClient),
        ),
      ) as _i10.ElectrumX);
  @override
  _i11.CachedElectrumX get cachedElectrumXClient => (super.noSuchMethod(
        Invocation.getter(#cachedElectrumXClient),
        returnValue: _FakeCachedElectrumX_8(
          this,
          Invocation.getter(#cachedElectrumXClient),
        ),
      ) as _i11.CachedElectrumX);
  @override
  _i12.Balance get balance => (super.noSuchMethod(
        Invocation.getter(#balance),
        returnValue: _FakeBalance_9(
          this,
          Invocation.getter(#balance),
        ),
      ) as _i12.Balance);
  @override
  set onIsActiveWalletChanged(void Function(bool)? _onIsActiveWalletChanged) =>
      super.noSuchMethod(
        Invocation.setter(
          #onIsActiveWalletChanged,
          _onIsActiveWalletChanged,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i13.MainDB get db => (super.noSuchMethod(
        Invocation.getter(#db),
        returnValue: _FakeMainDB_10(
          this,
          Invocation.getter(#db),
        ),
      ) as _i13.MainDB);
  @override
  _i14.NetworkType get networkType => (super.noSuchMethod(
        Invocation.getter(#networkType),
        returnValue: _FakeNetworkType_11(
          this,
          Invocation.getter(#networkType),
        ),
      ) as _i14.NetworkType);
  @override
  _i21.Future<void> exit() => (super.noSuchMethod(
        Invocation.method(
          #exit,
          [],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i26.DerivePathType addressType({required String? address}) =>
      (super.noSuchMethod(
        Invocation.method(
          #addressType,
          [],
          {#address: address},
        ),
        returnValue: _i26.DerivePathType.bip44,
      ) as _i26.DerivePathType);
  @override
  _i21.Future<void> recoverFromMnemonic({
    required String? mnemonic,
    String? mnemonicPassphrase,
    required int? maxUnusedAddressGap,
    required int? maxNumberOfIndexesToCheck,
    required int? height,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #recoverFromMnemonic,
          [],
          {
            #mnemonic: mnemonic,
            #mnemonicPassphrase: mnemonicPassphrase,
            #maxUnusedAddressGap: maxUnusedAddressGap,
            #maxNumberOfIndexesToCheck: maxNumberOfIndexesToCheck,
            #height: height,
          },
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<void> getTransactionCacheEarly(List<String>? allAddresses) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTransactionCacheEarly,
          [allAddresses],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<bool> refreshIfThereIsNewData() => (super.noSuchMethod(
        Invocation.method(
          #refreshIfThereIsNewData,
          [],
        ),
        returnValue: _i21.Future<bool>.value(false),
      ) as _i21.Future<bool>);
  @override
  _i21.Future<void> getAllTxsToWatch() => (super.noSuchMethod(
        Invocation.method(
          #getAllTxsToWatch,
          [],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<void> refresh() => (super.noSuchMethod(
        Invocation.method(
          #refresh,
          [],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<Map<String, dynamic>> prepareSend({
    required String? address,
    required int? satoshiAmount,
    Map<String, dynamic>? args,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #prepareSend,
          [],
          {
            #address: address,
            #satoshiAmount: satoshiAmount,
            #args: args,
          },
        ),
        returnValue:
            _i21.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i21.Future<Map<String, dynamic>>);
  @override
  _i21.Future<String> confirmSend({required Map<String, dynamic>? txData}) =>
      (super.noSuchMethod(
        Invocation.method(
          #confirmSend,
          [],
          {#txData: txData},
        ),
        returnValue: _i21.Future<String>.value(''),
      ) as _i21.Future<String>);
  @override
  _i21.Future<bool> testNetworkConnection() => (super.noSuchMethod(
        Invocation.method(
          #testNetworkConnection,
          [],
        ),
        returnValue: _i21.Future<bool>.value(false),
      ) as _i21.Future<bool>);
  @override
  void startNetworkAlivePinging() => super.noSuchMethod(
        Invocation.method(
          #startNetworkAlivePinging,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void stopNetworkAlivePinging() => super.noSuchMethod(
        Invocation.method(
          #stopNetworkAlivePinging,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i21.Future<void> initializeNew() => (super.noSuchMethod(
        Invocation.method(
          #initializeNew,
          [],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<void> initializeExisting() => (super.noSuchMethod(
        Invocation.method(
          #initializeExisting,
          [],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<void> updateSentCachedTxData(Map<String, dynamic>? txData) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSentCachedTxData,
          [txData],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  bool validateAddress(String? address) => (super.noSuchMethod(
        Invocation.method(
          #validateAddress,
          [address],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i21.Future<void> updateNode(bool? shouldRefresh) => (super.noSuchMethod(
        Invocation.method(
          #updateNode,
          [shouldRefresh],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<_i10.ElectrumXNode> getCurrentNode() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentNode,
          [],
        ),
        returnValue:
            _i21.Future<_i10.ElectrumXNode>.value(_FakeElectrumXNode_12(
          this,
          Invocation.method(
            #getCurrentNode,
            [],
          ),
        )),
      ) as _i21.Future<_i10.ElectrumXNode>);
  @override
  _i21.Future<void> addDerivation({
    required int? chain,
    required String? address,
    required String? pubKey,
    required String? wif,
    required _i26.DerivePathType? derivePathType,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addDerivation,
          [],
          {
            #chain: chain,
            #address: address,
            #pubKey: pubKey,
            #wif: wif,
            #derivePathType: derivePathType,
          },
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<void> addDerivations({
    required int? chain,
    required _i26.DerivePathType? derivePathType,
    required Map<String, dynamic>? derivationsToAdd,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addDerivations,
          [],
          {
            #chain: chain,
            #derivePathType: derivePathType,
            #derivationsToAdd: derivationsToAdd,
          },
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<List<Map<String, dynamic>>> fastFetch(
          List<String>? allTxHashes) =>
      (super.noSuchMethod(
        Invocation.method(
          #fastFetch,
          [allTxHashes],
        ),
        returnValue: _i21.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i21.Future<List<Map<String, dynamic>>>);
  @override
  _i21.Future<int> getTxCount({required String? address}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTxCount,
          [],
          {#address: address},
        ),
        returnValue: _i21.Future<int>.value(0),
      ) as _i21.Future<int>);
  @override
  _i21.Future<void> checkCurrentReceivingAddressesForTransactions() =>
      (super.noSuchMethod(
        Invocation.method(
          #checkCurrentReceivingAddressesForTransactions,
          [],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<void> checkCurrentChangeAddressesForTransactions() =>
      (super.noSuchMethod(
        Invocation.method(
          #checkCurrentChangeAddressesForTransactions,
          [],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  int estimateTxFee({
    required int? vSize,
    required int? feeRatePerKB,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #estimateTxFee,
          [],
          {
            #vSize: vSize,
            #feeRatePerKB: feeRatePerKB,
          },
        ),
        returnValue: 0,
      ) as int);
  @override
  dynamic coinSelection(
    int? satoshiAmountToSend,
    int? selectedTxFeeRate,
    String? _recipientAddress,
    bool? isSendAll, {
    int? additionalOutputs = 0,
    List<_i16.UTXO>? utxos,
  }) =>
      super.noSuchMethod(Invocation.method(
        #coinSelection,
        [
          satoshiAmountToSend,
          selectedTxFeeRate,
          _recipientAddress,
          isSendAll,
        ],
        {
          #additionalOutputs: additionalOutputs,
          #utxos: utxos,
        },
      ));
  @override
  _i21.Future<Map<String, dynamic>> fetchBuildTxData(
          List<_i16.UTXO>? utxosToUse) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchBuildTxData,
          [utxosToUse],
        ),
        returnValue:
            _i21.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i21.Future<Map<String, dynamic>>);
  @override
  _i21.Future<Map<String, dynamic>> buildTransaction({
    required List<_i16.UTXO>? utxosToUse,
    required Map<String, dynamic>? utxoSigningData,
    required List<String>? recipients,
    required List<int>? satoshiAmounts,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #buildTransaction,
          [],
          {
            #utxosToUse: utxosToUse,
            #utxoSigningData: utxoSigningData,
            #recipients: recipients,
            #satoshiAmounts: satoshiAmounts,
          },
        ),
        returnValue:
            _i21.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i21.Future<Map<String, dynamic>>);
  @override
  _i21.Future<void> fullRescan(
    int? maxUnusedAddressGap,
    int? maxNumberOfIndexesToCheck,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fullRescan,
          [
            maxUnusedAddressGap,
            maxNumberOfIndexesToCheck,
          ],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<int> estimateFeeFor(
    int? satoshiAmount,
    int? feeRate,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #estimateFeeFor,
          [
            satoshiAmount,
            feeRate,
          ],
        ),
        returnValue: _i21.Future<int>.value(0),
      ) as _i21.Future<int>);
  @override
  int roughFeeEstimate(
    int? inputCount,
    int? outputCount,
    int? feeRatePerKB,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #roughFeeEstimate,
          [
            inputCount,
            outputCount,
            feeRatePerKB,
          ],
        ),
        returnValue: 0,
      ) as int);
  @override
  _i21.Future<int> sweepAllEstimate(int? feeRate) => (super.noSuchMethod(
        Invocation.method(
          #sweepAllEstimate,
          [feeRate],
        ),
        returnValue: _i21.Future<int>.value(0),
      ) as _i21.Future<int>);
  @override
  _i21.Future<bool> generateNewAddress() => (super.noSuchMethod(
        Invocation.method(
          #generateNewAddress,
          [],
        ),
        returnValue: _i21.Future<bool>.value(false),
      ) as _i21.Future<bool>);
  @override
  void initCache(
    String? walletId,
    _i20.Coin? coin,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #initCache,
          [
            walletId,
            coin,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i21.Future<void> updateCachedId(String? id) => (super.noSuchMethod(
        Invocation.method(
          #updateCachedId,
          [id],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  int getCachedChainHeight() => (super.noSuchMethod(
        Invocation.method(
          #getCachedChainHeight,
          [],
        ),
        returnValue: 0,
      ) as int);
  @override
  _i21.Future<void> updateCachedChainHeight(int? height) => (super.noSuchMethod(
        Invocation.method(
          #updateCachedChainHeight,
          [height],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  bool getCachedIsFavorite() => (super.noSuchMethod(
        Invocation.method(
          #getCachedIsFavorite,
          [],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i21.Future<void> updateCachedIsFavorite(bool? isFavorite) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCachedIsFavorite,
          [isFavorite],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i12.Balance getCachedBalance() => (super.noSuchMethod(
        Invocation.method(
          #getCachedBalance,
          [],
        ),
        returnValue: _FakeBalance_9(
          this,
          Invocation.method(
            #getCachedBalance,
            [],
          ),
        ),
      ) as _i12.Balance);
  @override
  _i21.Future<void> updateCachedBalance(_i12.Balance? balance) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCachedBalance,
          [balance],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i12.Balance getCachedBalanceSecondary() => (super.noSuchMethod(
        Invocation.method(
          #getCachedBalanceSecondary,
          [],
        ),
        returnValue: _FakeBalance_9(
          this,
          Invocation.method(
            #getCachedBalanceSecondary,
            [],
          ),
        ),
      ) as _i12.Balance);
  @override
  _i21.Future<void> updateCachedBalanceSecondary(_i12.Balance? balance) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCachedBalanceSecondary,
          [balance],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  void initWalletDB({_i13.MainDB? mockableOverride}) => super.noSuchMethod(
        Invocation.method(
          #initWalletDB,
          [],
          {#mockableOverride: mockableOverride},
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i21.Future<_i15.Tuple2<_i16.Transaction, _i16.Address>> parseTransaction(
    Map<String, dynamic>? txData,
    dynamic electrumxClient,
    List<_i16.Address>? myAddresses,
    _i20.Coin? coin,
    int? minConfirms,
    String? walletId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #parseTransaction,
          [
            txData,
            electrumxClient,
            myAddresses,
            coin,
            minConfirms,
            walletId,
          ],
        ),
        returnValue:
            _i21.Future<_i15.Tuple2<_i16.Transaction, _i16.Address>>.value(
                _FakeTuple2_13<_i16.Transaction, _i16.Address>(
          this,
          Invocation.method(
            #parseTransaction,
            [
              txData,
              electrumxClient,
              myAddresses,
              coin,
              minConfirms,
              walletId,
            ],
          ),
        )),
      ) as _i21.Future<_i15.Tuple2<_i16.Transaction, _i16.Address>>);
  @override
  void initPaynymWalletInterface({
    required String? walletId,
    required String? walletName,
    required _i14.NetworkType? network,
    required _i20.Coin? coin,
    required _i13.MainDB? db,
    required _i10.ElectrumX? electrumXClient,
    required _i7.SecureStorageInterface? secureStorage,
    required int? dustLimitP2PKH,
    required int? minConfirms,
    required _i21.Future<String?> Function()? getMnemonicString,
    required _i21.Future<String?> Function()? getMnemonicPassphrase,
    required _i21.Future<int> Function()? getChainHeight,
    required _i21.Future<String> Function()? getCurrentChangeAddress,
    required int Function({
      required int feeRatePerKB,
      required int vSize,
    })?
        estimateTxFee,
    required _i21.Future<Map<String, dynamic>> Function({
      required String address,
      required int satoshiAmount,
      Map<String, dynamic>? args,
    })?
        prepareSend,
    required _i21.Future<int> Function({required String address})? getTxCount,
    required _i21.Future<Map<String, dynamic>> Function(List<_i16.UTXO>)?
        fetchBuildTxData,
    required _i21.Future<void> Function()? refresh,
    required _i21.Future<void> Function()? checkChangeAddressForTransactions,
    required _i21.Future<void> Function({
      required String address,
      required int chain,
      required _i26.DerivePathType derivePathType,
      required String pubKey,
      required String wif,
    })?
        addDerivation,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #initPaynymWalletInterface,
          [],
          {
            #walletId: walletId,
            #walletName: walletName,
            #network: network,
            #coin: coin,
            #db: db,
            #electrumXClient: electrumXClient,
            #secureStorage: secureStorage,
            #dustLimitP2PKH: dustLimitP2PKH,
            #minConfirms: minConfirms,
            #getMnemonicString: getMnemonicString,
            #getMnemonicPassphrase: getMnemonicPassphrase,
            #getChainHeight: getChainHeight,
            #getCurrentChangeAddress: getCurrentChangeAddress,
            #estimateTxFee: estimateTxFee,
            #prepareSend: prepareSend,
            #getTxCount: getTxCount,
            #fetchBuildTxData: fetchBuildTxData,
            #refresh: refresh,
            #checkChangeAddressForTransactions:
                checkChangeAddressForTransactions,
            #addDerivation: addDerivation,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i21.Future<_i16.Address> currentReceivingPaynymAddress(
          _i17.PaymentCode? sender) =>
      (super.noSuchMethod(
        Invocation.method(
          #currentReceivingPaynymAddress,
          [sender],
        ),
        returnValue: _i21.Future<_i16.Address>.value(_FakeAddress_14(
          this,
          Invocation.method(
            #currentReceivingPaynymAddress,
            [sender],
          ),
        )),
      ) as _i21.Future<_i16.Address>);
  @override
  _i21.Future<void> checkCurrentPaynymReceivingAddressForTransactions(
          _i17.PaymentCode? sender) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkCurrentPaynymReceivingAddressForTransactions,
          [sender],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<void> checkAllCurrentReceivingPaynymAddressesForTransactions() =>
      (super.noSuchMethod(
        Invocation.method(
          #checkAllCurrentReceivingPaynymAddressesForTransactions,
          [],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<_i27.Uint8List> deriveNotificationPrivateKey({
    required String? mnemonic,
    required String? mnemonicPassphrase,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deriveNotificationPrivateKey,
          [],
          {
            #mnemonic: mnemonic,
            #mnemonicPassphrase: mnemonicPassphrase,
          },
        ),
        returnValue: _i21.Future<_i27.Uint8List>.value(_i27.Uint8List(0)),
      ) as _i21.Future<_i27.Uint8List>);
  @override
  _i21.Future<_i27.Uint8List> deriveReceivingPrivateKey({
    required String? mnemonic,
    required String? mnemonicPassphrase,
    required int? index,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deriveReceivingPrivateKey,
          [],
          {
            #mnemonic: mnemonic,
            #mnemonicPassphrase: mnemonicPassphrase,
            #index: index,
          },
        ),
        returnValue: _i21.Future<_i27.Uint8List>.value(_i27.Uint8List(0)),
      ) as _i21.Future<_i27.Uint8List>);
  @override
  _i21.Future<_i17.PaymentCode> getPaymentCode(
          _i26.DerivePathType? derivePathType) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPaymentCode,
          [derivePathType],
        ),
        returnValue: _i21.Future<_i17.PaymentCode>.value(_FakePaymentCode_15(
          this,
          Invocation.method(
            #getPaymentCode,
            [derivePathType],
          ),
        )),
      ) as _i21.Future<_i17.PaymentCode>);
  @override
  _i21.Future<_i27.Uint8List> signWithNotificationKey(_i27.Uint8List? data) =>
      (super.noSuchMethod(
        Invocation.method(
          #signWithNotificationKey,
          [data],
        ),
        returnValue: _i21.Future<_i27.Uint8List>.value(_i27.Uint8List(0)),
      ) as _i21.Future<_i27.Uint8List>);
  @override
  _i21.Future<String> signStringWithNotificationKey(String? data) =>
      (super.noSuchMethod(
        Invocation.method(
          #signStringWithNotificationKey,
          [data],
        ),
        returnValue: _i21.Future<String>.value(''),
      ) as _i21.Future<String>);
  @override
  _i21.Future<Map<String, dynamic>> preparePaymentCodeSend({
    required _i17.PaymentCode? paymentCode,
    required int? satoshiAmount,
    Map<String, dynamic>? args,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #preparePaymentCodeSend,
          [],
          {
            #paymentCode: paymentCode,
            #satoshiAmount: satoshiAmount,
            #args: args,
          },
        ),
        returnValue:
            _i21.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i21.Future<Map<String, dynamic>>);
  @override
  _i21.Future<_i16.Address> nextUnusedSendAddressFrom({
    required _i17.PaymentCode? pCode,
    required _i27.Uint8List? privateKey,
    int? startIndex = 0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #nextUnusedSendAddressFrom,
          [],
          {
            #pCode: pCode,
            #privateKey: privateKey,
            #startIndex: startIndex,
          },
        ),
        returnValue: _i21.Future<_i16.Address>.value(_FakeAddress_14(
          this,
          Invocation.method(
            #nextUnusedSendAddressFrom,
            [],
            {
              #pCode: pCode,
              #privateKey: privateKey,
              #startIndex: startIndex,
            },
          ),
        )),
      ) as _i21.Future<_i16.Address>);
  @override
  _i21.Future<Map<String, dynamic>> prepareNotificationTx({
    required int? selectedTxFeeRate,
    required String? targetPaymentCodeString,
    int? additionalOutputs = 0,
    List<_i16.UTXO>? utxos,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #prepareNotificationTx,
          [],
          {
            #selectedTxFeeRate: selectedTxFeeRate,
            #targetPaymentCodeString: targetPaymentCodeString,
            #additionalOutputs: additionalOutputs,
            #utxos: utxos,
          },
        ),
        returnValue:
            _i21.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i21.Future<Map<String, dynamic>>);
  @override
  _i21.Future<String> broadcastNotificationTx(
          {required Map<String, dynamic>? preparedTx}) =>
      (super.noSuchMethod(
        Invocation.method(
          #broadcastNotificationTx,
          [],
          {#preparedTx: preparedTx},
        ),
        returnValue: _i21.Future<String>.value(''),
      ) as _i21.Future<String>);
  @override
  _i21.Future<bool> hasConnected(String? paymentCodeString) =>
      (super.noSuchMethod(
        Invocation.method(
          #hasConnected,
          [paymentCodeString],
        ),
        returnValue: _i21.Future<bool>.value(false),
      ) as _i21.Future<bool>);
  @override
  _i21.Future<_i17.PaymentCode?> unBlindedPaymentCodeFromTransaction({
    required _i16.Transaction? transaction,
    required _i16.Address? myNotificationAddress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #unBlindedPaymentCodeFromTransaction,
          [],
          {
            #transaction: transaction,
            #myNotificationAddress: myNotificationAddress,
          },
        ),
        returnValue: _i21.Future<_i17.PaymentCode?>.value(),
      ) as _i21.Future<_i17.PaymentCode?>);
  @override
  _i21.Future<List<_i17.PaymentCode>>
      getAllPaymentCodesFromNotificationTransactions() => (super.noSuchMethod(
            Invocation.method(
              #getAllPaymentCodesFromNotificationTransactions,
              [],
            ),
            returnValue:
                _i21.Future<List<_i17.PaymentCode>>.value(<_i17.PaymentCode>[]),
          ) as _i21.Future<List<_i17.PaymentCode>>);
  @override
  _i21.Future<void> checkForNotificationTransactionsTo(
          Set<String>? otherCodeStrings) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkForNotificationTransactionsTo,
          [otherCodeStrings],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<void> restoreAllHistory({
    required int? maxUnusedAddressGap,
    required int? maxNumberOfIndexesToCheck,
    required Set<String>? paymentCodeStrings,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #restoreAllHistory,
          [],
          {
            #maxUnusedAddressGap: maxUnusedAddressGap,
            #maxNumberOfIndexesToCheck: maxNumberOfIndexesToCheck,
            #paymentCodeStrings: paymentCodeStrings,
          },
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<void> restoreHistoryWith(
    _i17.PaymentCode? other,
    int? maxUnusedAddressGap,
    int? maxNumberOfIndexesToCheck,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #restoreHistoryWith,
          [
            other,
            maxUnusedAddressGap,
            maxNumberOfIndexesToCheck,
          ],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<_i16.Address> generatePaynymSendAddressFromKeyPair({
    required _i14.ECPair? pair,
    required int? derivationIndex,
    required _i26.DerivePathType? derivePathType,
    required _i17.PaymentCode? toPaymentCode,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #generatePaynymSendAddressFromKeyPair,
          [],
          {
            #pair: pair,
            #derivationIndex: derivationIndex,
            #derivePathType: derivePathType,
            #toPaymentCode: toPaymentCode,
          },
        ),
        returnValue: _i21.Future<_i16.Address>.value(_FakeAddress_14(
          this,
          Invocation.method(
            #generatePaynymSendAddressFromKeyPair,
            [],
            {
              #pair: pair,
              #derivationIndex: derivationIndex,
              #derivePathType: derivePathType,
              #toPaymentCode: toPaymentCode,
            },
          ),
        )),
      ) as _i21.Future<_i16.Address>);
  @override
  _i21.Future<_i16.Address> generatePaynymReceivingAddressFromKeyPair({
    required _i14.ECPair? pair,
    required int? derivationIndex,
    required _i26.DerivePathType? derivePathType,
    required _i17.PaymentCode? fromPaymentCode,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #generatePaynymReceivingAddressFromKeyPair,
          [],
          {
            #pair: pair,
            #derivationIndex: derivationIndex,
            #derivePathType: derivePathType,
            #fromPaymentCode: fromPaymentCode,
          },
        ),
        returnValue: _i21.Future<_i16.Address>.value(_FakeAddress_14(
          this,
          Invocation.method(
            #generatePaynymReceivingAddressFromKeyPair,
            [],
            {
              #pair: pair,
              #derivationIndex: derivationIndex,
              #derivePathType: derivePathType,
              #fromPaymentCode: fromPaymentCode,
            },
          ),
        )),
      ) as _i21.Future<_i16.Address>);
  @override
  _i21.Future<_i16.Address> getMyNotificationAddress(
          _i26.DerivePathType? derivePathType) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMyNotificationAddress,
          [derivePathType],
        ),
        returnValue: _i21.Future<_i16.Address>.value(_FakeAddress_14(
          this,
          Invocation.method(
            #getMyNotificationAddress,
            [derivePathType],
          ),
        )),
      ) as _i21.Future<_i16.Address>);
  @override
  _i21.Future<List<String>> lookupKey(String? paymentCodeString) =>
      (super.noSuchMethod(
        Invocation.method(
          #lookupKey,
          [paymentCodeString],
        ),
        returnValue: _i21.Future<List<String>>.value(<String>[]),
      ) as _i21.Future<List<String>>);
  @override
  _i21.Future<String?> paymentCodeStringByKey(String? key) =>
      (super.noSuchMethod(
        Invocation.method(
          #paymentCodeStringByKey,
          [key],
        ),
        returnValue: _i21.Future<String?>.value(),
      ) as _i21.Future<String?>);
  @override
  _i21.Future<String> storeCode(String? paymentCodeString) =>
      (super.noSuchMethod(
        Invocation.method(
          #storeCode,
          [paymentCodeString],
        ),
        returnValue: _i21.Future<String>.value(''),
      ) as _i21.Future<String>);
}

/// A class which mocks [LocaleService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocaleService extends _i1.Mock implements _i28.LocaleService {
  MockLocaleService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get locale => (super.noSuchMethod(
        Invocation.getter(#locale),
        returnValue: '',
      ) as String);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i21.Future<void> loadLocale({bool? notify = true}) => (super.noSuchMethod(
        Invocation.method(
          #loadLocale,
          [],
          {#notify: notify},
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  void addListener(_i23.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i23.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [Prefs].
///
/// See the documentation for Mockito's code generation for more information.
class MockPrefs extends _i1.Mock implements _i22.Prefs {
  MockPrefs() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isInitialized => (super.noSuchMethod(
        Invocation.getter(#isInitialized),
        returnValue: false,
      ) as bool);
  @override
  int get lastUnlockedTimeout => (super.noSuchMethod(
        Invocation.getter(#lastUnlockedTimeout),
        returnValue: 0,
      ) as int);
  @override
  set lastUnlockedTimeout(int? lastUnlockedTimeout) => super.noSuchMethod(
        Invocation.setter(
          #lastUnlockedTimeout,
          lastUnlockedTimeout,
        ),
        returnValueForMissingStub: null,
      );
  @override
  int get lastUnlocked => (super.noSuchMethod(
        Invocation.getter(#lastUnlocked),
        returnValue: 0,
      ) as int);
  @override
  set lastUnlocked(int? lastUnlocked) => super.noSuchMethod(
        Invocation.setter(
          #lastUnlocked,
          lastUnlocked,
        ),
        returnValueForMissingStub: null,
      );
  @override
  int get currentNotificationId => (super.noSuchMethod(
        Invocation.getter(#currentNotificationId),
        returnValue: 0,
      ) as int);
  @override
  List<String> get walletIdsSyncOnStartup => (super.noSuchMethod(
        Invocation.getter(#walletIdsSyncOnStartup),
        returnValue: <String>[],
      ) as List<String>);
  @override
  set walletIdsSyncOnStartup(List<String>? walletIdsSyncOnStartup) =>
      super.noSuchMethod(
        Invocation.setter(
          #walletIdsSyncOnStartup,
          walletIdsSyncOnStartup,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i29.SyncingType get syncType => (super.noSuchMethod(
        Invocation.getter(#syncType),
        returnValue: _i29.SyncingType.currentWalletOnly,
      ) as _i29.SyncingType);
  @override
  set syncType(_i29.SyncingType? syncType) => super.noSuchMethod(
        Invocation.setter(
          #syncType,
          syncType,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get wifiOnly => (super.noSuchMethod(
        Invocation.getter(#wifiOnly),
        returnValue: false,
      ) as bool);
  @override
  set wifiOnly(bool? wifiOnly) => super.noSuchMethod(
        Invocation.setter(
          #wifiOnly,
          wifiOnly,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get showFavoriteWallets => (super.noSuchMethod(
        Invocation.getter(#showFavoriteWallets),
        returnValue: false,
      ) as bool);
  @override
  set showFavoriteWallets(bool? showFavoriteWallets) => super.noSuchMethod(
        Invocation.setter(
          #showFavoriteWallets,
          showFavoriteWallets,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get language => (super.noSuchMethod(
        Invocation.getter(#language),
        returnValue: '',
      ) as String);
  @override
  set language(String? newLanguage) => super.noSuchMethod(
        Invocation.setter(
          #language,
          newLanguage,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get currency => (super.noSuchMethod(
        Invocation.getter(#currency),
        returnValue: '',
      ) as String);
  @override
  set currency(String? newCurrency) => super.noSuchMethod(
        Invocation.setter(
          #currency,
          newCurrency,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i30.ExchangeRateType get exchangeRateType => (super.noSuchMethod(
        Invocation.getter(#exchangeRateType),
        returnValue: _i30.ExchangeRateType.estimated,
      ) as _i30.ExchangeRateType);
  @override
  set exchangeRateType(_i30.ExchangeRateType? exchangeRateType) =>
      super.noSuchMethod(
        Invocation.setter(
          #exchangeRateType,
          exchangeRateType,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get useBiometrics => (super.noSuchMethod(
        Invocation.getter(#useBiometrics),
        returnValue: false,
      ) as bool);
  @override
  set useBiometrics(bool? useBiometrics) => super.noSuchMethod(
        Invocation.setter(
          #useBiometrics,
          useBiometrics,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get hasPin => (super.noSuchMethod(
        Invocation.getter(#hasPin),
        returnValue: false,
      ) as bool);
  @override
  set hasPin(bool? hasPin) => super.noSuchMethod(
        Invocation.setter(
          #hasPin,
          hasPin,
        ),
        returnValueForMissingStub: null,
      );
  @override
  int get familiarity => (super.noSuchMethod(
        Invocation.getter(#familiarity),
        returnValue: 0,
      ) as int);
  @override
  set familiarity(int? familiarity) => super.noSuchMethod(
        Invocation.setter(
          #familiarity,
          familiarity,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get showTestNetCoins => (super.noSuchMethod(
        Invocation.getter(#showTestNetCoins),
        returnValue: false,
      ) as bool);
  @override
  set showTestNetCoins(bool? showTestNetCoins) => super.noSuchMethod(
        Invocation.setter(
          #showTestNetCoins,
          showTestNetCoins,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isAutoBackupEnabled => (super.noSuchMethod(
        Invocation.getter(#isAutoBackupEnabled),
        returnValue: false,
      ) as bool);
  @override
  set isAutoBackupEnabled(bool? isAutoBackupEnabled) => super.noSuchMethod(
        Invocation.setter(
          #isAutoBackupEnabled,
          isAutoBackupEnabled,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set autoBackupLocation(String? autoBackupLocation) => super.noSuchMethod(
        Invocation.setter(
          #autoBackupLocation,
          autoBackupLocation,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i31.BackupFrequencyType get backupFrequencyType => (super.noSuchMethod(
        Invocation.getter(#backupFrequencyType),
        returnValue: _i31.BackupFrequencyType.everyTenMinutes,
      ) as _i31.BackupFrequencyType);
  @override
  set backupFrequencyType(_i31.BackupFrequencyType? backupFrequencyType) =>
      super.noSuchMethod(
        Invocation.setter(
          #backupFrequencyType,
          backupFrequencyType,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set lastAutoBackup(DateTime? lastAutoBackup) => super.noSuchMethod(
        Invocation.setter(
          #lastAutoBackup,
          lastAutoBackup,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get hideBlockExplorerWarning => (super.noSuchMethod(
        Invocation.getter(#hideBlockExplorerWarning),
        returnValue: false,
      ) as bool);
  @override
  set hideBlockExplorerWarning(bool? hideBlockExplorerWarning) =>
      super.noSuchMethod(
        Invocation.setter(
          #hideBlockExplorerWarning,
          hideBlockExplorerWarning,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get gotoWalletOnStartup => (super.noSuchMethod(
        Invocation.getter(#gotoWalletOnStartup),
        returnValue: false,
      ) as bool);
  @override
  set gotoWalletOnStartup(bool? gotoWalletOnStartup) => super.noSuchMethod(
        Invocation.setter(
          #gotoWalletOnStartup,
          gotoWalletOnStartup,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set startupWalletId(String? startupWalletId) => super.noSuchMethod(
        Invocation.setter(
          #startupWalletId,
          startupWalletId,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get externalCalls => (super.noSuchMethod(
        Invocation.getter(#externalCalls),
        returnValue: false,
      ) as bool);
  @override
  set externalCalls(bool? externalCalls) => super.noSuchMethod(
        Invocation.setter(
          #externalCalls,
          externalCalls,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i21.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<void> incrementCurrentNotificationIndex() => (super.noSuchMethod(
        Invocation.method(
          #incrementCurrentNotificationIndex,
          [],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<bool> isExternalCallsSet() => (super.noSuchMethod(
        Invocation.method(
          #isExternalCallsSet,
          [],
        ),
        returnValue: _i21.Future<bool>.value(false),
      ) as _i21.Future<bool>);
  @override
  _i21.Future<void> saveUserID(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #saveUserID,
          [userId],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<void> saveSignupEpoch(int? signupEpoch) => (super.noSuchMethod(
        Invocation.method(
          #saveSignupEpoch,
          [signupEpoch],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  void addListener(_i23.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i23.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [Manager].
///
/// See the documentation for Mockito's code generation for more information.
class MockManager extends _i1.Mock implements _i6.Manager {
  @override
  bool get isActiveWallet => (super.noSuchMethod(
        Invocation.getter(#isActiveWallet),
        returnValue: false,
      ) as bool);
  @override
  set isActiveWallet(bool? isActive) => super.noSuchMethod(
        Invocation.setter(
          #isActiveWallet,
          isActive,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i18.CoinServiceAPI get wallet => (super.noSuchMethod(
        Invocation.getter(#wallet),
        returnValue: _FakeCoinServiceAPI_16(
          this,
          Invocation.getter(#wallet),
        ),
      ) as _i18.CoinServiceAPI);
  @override
  bool get hasBackgroundRefreshListener => (super.noSuchMethod(
        Invocation.getter(#hasBackgroundRefreshListener),
        returnValue: false,
      ) as bool);
  @override
  _i20.Coin get coin => (super.noSuchMethod(
        Invocation.getter(#coin),
        returnValue: _i20.Coin.bitcoin,
      ) as _i20.Coin);
  @override
  bool get isRefreshing => (super.noSuchMethod(
        Invocation.getter(#isRefreshing),
        returnValue: false,
      ) as bool);
  @override
  bool get shouldAutoSync => (super.noSuchMethod(
        Invocation.getter(#shouldAutoSync),
        returnValue: false,
      ) as bool);
  @override
  set shouldAutoSync(bool? shouldAutoSync) => super.noSuchMethod(
        Invocation.setter(
          #shouldAutoSync,
          shouldAutoSync,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isFavorite => (super.noSuchMethod(
        Invocation.getter(#isFavorite),
        returnValue: false,
      ) as bool);
  @override
  set isFavorite(bool? markFavorite) => super.noSuchMethod(
        Invocation.setter(
          #isFavorite,
          markFavorite,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i21.Future<_i9.FeeObject> get fees => (super.noSuchMethod(
        Invocation.getter(#fees),
        returnValue: _i21.Future<_i9.FeeObject>.value(_FakeFeeObject_6(
          this,
          Invocation.getter(#fees),
        )),
      ) as _i21.Future<_i9.FeeObject>);
  @override
  _i21.Future<int> get maxFee => (super.noSuchMethod(
        Invocation.getter(#maxFee),
        returnValue: _i21.Future<int>.value(0),
      ) as _i21.Future<int>);
  @override
  _i21.Future<String> get currentReceivingAddress => (super.noSuchMethod(
        Invocation.getter(#currentReceivingAddress),
        returnValue: _i21.Future<String>.value(''),
      ) as _i21.Future<String>);
  @override
  _i12.Balance get balance => (super.noSuchMethod(
        Invocation.getter(#balance),
        returnValue: _FakeBalance_9(
          this,
          Invocation.getter(#balance),
        ),
      ) as _i12.Balance);
  @override
  _i21.Future<List<_i16.Transaction>> get transactions => (super.noSuchMethod(
        Invocation.getter(#transactions),
        returnValue:
            _i21.Future<List<_i16.Transaction>>.value(<_i16.Transaction>[]),
      ) as _i21.Future<List<_i16.Transaction>>);
  @override
  _i21.Future<List<_i16.UTXO>> get utxos => (super.noSuchMethod(
        Invocation.getter(#utxos),
        returnValue: _i21.Future<List<_i16.UTXO>>.value(<_i16.UTXO>[]),
      ) as _i21.Future<List<_i16.UTXO>>);
  @override
  set walletName(String? newName) => super.noSuchMethod(
        Invocation.setter(
          #walletName,
          newName,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get walletName => (super.noSuchMethod(
        Invocation.getter(#walletName),
        returnValue: '',
      ) as String);
  @override
  String get walletId => (super.noSuchMethod(
        Invocation.getter(#walletId),
        returnValue: '',
      ) as String);
  @override
  _i21.Future<List<String>> get mnemonic => (super.noSuchMethod(
        Invocation.getter(#mnemonic),
        returnValue: _i21.Future<List<String>>.value(<String>[]),
      ) as _i21.Future<List<String>>);
  @override
  _i21.Future<String?> get mnemonicPassphrase => (super.noSuchMethod(
        Invocation.getter(#mnemonicPassphrase),
        returnValue: _i21.Future<String?>.value(),
      ) as _i21.Future<String?>);
  @override
  bool get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: false,
      ) as bool);
  @override
  int get currentHeight => (super.noSuchMethod(
        Invocation.getter(#currentHeight),
        returnValue: 0,
      ) as int);
  @override
  bool get hasPaynymSupport => (super.noSuchMethod(
        Invocation.getter(#hasPaynymSupport),
        returnValue: false,
      ) as bool);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i21.Future<void> updateNode(bool? shouldRefresh) => (super.noSuchMethod(
        Invocation.method(
          #updateNode,
          [shouldRefresh],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i21.Future<Map<String, dynamic>> prepareSend({
    required String? address,
    required int? satoshiAmount,
    Map<String, dynamic>? args,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #prepareSend,
          [],
          {
            #address: address,
            #satoshiAmount: satoshiAmount,
            #args: args,
          },
        ),
        returnValue:
            _i21.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i21.Future<Map<String, dynamic>>);
  @override
  _i21.Future<String> confirmSend({required Map<String, dynamic>? txData}) =>
      (super.noSuchMethod(
        Invocation.method(
          #confirmSend,
          [],
          {#txData: txData},
        ),
        returnValue: _i21.Future<String>.value(''),
      ) as _i21.Future<String>);
  @override
  _i21.Future<void> refresh() => (super.noSuchMethod(
        Invocation.method(
          #refresh,
          [],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  bool validateAddress(String? address) => (super.noSuchMethod(
        Invocation.method(
          #validateAddress,
          [address],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i21.Future<bool> testNetworkConnection() => (super.noSuchMethod(
        Invocation.method(
          #testNetworkConnection,
          [],
        ),
        returnValue: _i21.Future<bool>.value(false),
      ) as _i21.Future<bool>);
  @override
  _i21.Future<void> initializeNew() => (super.noSuchMethod(
        Invocation.method(
          #initializeNew,
          [],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<void> initializeExisting() => (super.noSuchMethod(
        Invocation.method(
          #initializeExisting,
          [],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<void> recoverFromMnemonic({
    required String? mnemonic,
    String? mnemonicPassphrase,
    required int? maxUnusedAddressGap,
    required int? maxNumberOfIndexesToCheck,
    required int? height,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #recoverFromMnemonic,
          [],
          {
            #mnemonic: mnemonic,
            #mnemonicPassphrase: mnemonicPassphrase,
            #maxUnusedAddressGap: maxUnusedAddressGap,
            #maxNumberOfIndexesToCheck: maxNumberOfIndexesToCheck,
            #height: height,
          },
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<void> exitCurrentWallet() => (super.noSuchMethod(
        Invocation.method(
          #exitCurrentWallet,
          [],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<void> fullRescan(
    int? maxUnusedAddressGap,
    int? maxNumberOfIndexesToCheck,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fullRescan,
          [
            maxUnusedAddressGap,
            maxNumberOfIndexesToCheck,
          ],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<int> estimateFeeFor(
    int? satoshiAmount,
    int? feeRate,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #estimateFeeFor,
          [
            satoshiAmount,
            feeRate,
          ],
        ),
        returnValue: _i21.Future<int>.value(0),
      ) as _i21.Future<int>);
  @override
  _i21.Future<bool> generateNewAddress() => (super.noSuchMethod(
        Invocation.method(
          #generateNewAddress,
          [],
        ),
        returnValue: _i21.Future<bool>.value(false),
      ) as _i21.Future<bool>);
  @override
  void addListener(_i23.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i23.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [CoinServiceAPI].
///
/// See the documentation for Mockito's code generation for more information.
class MockCoinServiceAPI extends _i1.Mock implements _i18.CoinServiceAPI {
  @override
  set onIsActiveWalletChanged(void Function(bool)? _onIsActiveWalletChanged) =>
      super.noSuchMethod(
        Invocation.setter(
          #onIsActiveWalletChanged,
          _onIsActiveWalletChanged,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i20.Coin get coin => (super.noSuchMethod(
        Invocation.getter(#coin),
        returnValue: _i20.Coin.bitcoin,
      ) as _i20.Coin);
  @override
  bool get isRefreshing => (super.noSuchMethod(
        Invocation.getter(#isRefreshing),
        returnValue: false,
      ) as bool);
  @override
  bool get shouldAutoSync => (super.noSuchMethod(
        Invocation.getter(#shouldAutoSync),
        returnValue: false,
      ) as bool);
  @override
  set shouldAutoSync(bool? shouldAutoSync) => super.noSuchMethod(
        Invocation.setter(
          #shouldAutoSync,
          shouldAutoSync,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isFavorite => (super.noSuchMethod(
        Invocation.getter(#isFavorite),
        returnValue: false,
      ) as bool);
  @override
  set isFavorite(bool? markFavorite) => super.noSuchMethod(
        Invocation.setter(
          #isFavorite,
          markFavorite,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i21.Future<_i9.FeeObject> get fees => (super.noSuchMethod(
        Invocation.getter(#fees),
        returnValue: _i21.Future<_i9.FeeObject>.value(_FakeFeeObject_6(
          this,
          Invocation.getter(#fees),
        )),
      ) as _i21.Future<_i9.FeeObject>);
  @override
  _i21.Future<int> get maxFee => (super.noSuchMethod(
        Invocation.getter(#maxFee),
        returnValue: _i21.Future<int>.value(0),
      ) as _i21.Future<int>);
  @override
  _i21.Future<String> get currentReceivingAddress => (super.noSuchMethod(
        Invocation.getter(#currentReceivingAddress),
        returnValue: _i21.Future<String>.value(''),
      ) as _i21.Future<String>);
  @override
  _i12.Balance get balance => (super.noSuchMethod(
        Invocation.getter(#balance),
        returnValue: _FakeBalance_9(
          this,
          Invocation.getter(#balance),
        ),
      ) as _i12.Balance);
  @override
  _i21.Future<List<_i16.Transaction>> get transactions => (super.noSuchMethod(
        Invocation.getter(#transactions),
        returnValue:
            _i21.Future<List<_i16.Transaction>>.value(<_i16.Transaction>[]),
      ) as _i21.Future<List<_i16.Transaction>>);
  @override
  _i21.Future<List<_i16.UTXO>> get utxos => (super.noSuchMethod(
        Invocation.getter(#utxos),
        returnValue: _i21.Future<List<_i16.UTXO>>.value(<_i16.UTXO>[]),
      ) as _i21.Future<List<_i16.UTXO>>);
  @override
  set walletName(String? newName) => super.noSuchMethod(
        Invocation.setter(
          #walletName,
          newName,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get walletName => (super.noSuchMethod(
        Invocation.getter(#walletName),
        returnValue: '',
      ) as String);
  @override
  String get walletId => (super.noSuchMethod(
        Invocation.getter(#walletId),
        returnValue: '',
      ) as String);
  @override
  _i21.Future<List<String>> get mnemonic => (super.noSuchMethod(
        Invocation.getter(#mnemonic),
        returnValue: _i21.Future<List<String>>.value(<String>[]),
      ) as _i21.Future<List<String>>);
  @override
  _i21.Future<String?> get mnemonicString => (super.noSuchMethod(
        Invocation.getter(#mnemonicString),
        returnValue: _i21.Future<String?>.value(),
      ) as _i21.Future<String?>);
  @override
  _i21.Future<String?> get mnemonicPassphrase => (super.noSuchMethod(
        Invocation.getter(#mnemonicPassphrase),
        returnValue: _i21.Future<String?>.value(),
      ) as _i21.Future<String?>);
  @override
  bool get hasCalledExit => (super.noSuchMethod(
        Invocation.getter(#hasCalledExit),
        returnValue: false,
      ) as bool);
  @override
  bool get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: false,
      ) as bool);
  @override
  int get storedChainHeight => (super.noSuchMethod(
        Invocation.getter(#storedChainHeight),
        returnValue: 0,
      ) as int);
  @override
  _i21.Future<Map<String, dynamic>> prepareSend({
    required String? address,
    required int? satoshiAmount,
    Map<String, dynamic>? args,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #prepareSend,
          [],
          {
            #address: address,
            #satoshiAmount: satoshiAmount,
            #args: args,
          },
        ),
        returnValue:
            _i21.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i21.Future<Map<String, dynamic>>);
  @override
  _i21.Future<String> confirmSend({required Map<String, dynamic>? txData}) =>
      (super.noSuchMethod(
        Invocation.method(
          #confirmSend,
          [],
          {#txData: txData},
        ),
        returnValue: _i21.Future<String>.value(''),
      ) as _i21.Future<String>);
  @override
  _i21.Future<void> refresh() => (super.noSuchMethod(
        Invocation.method(
          #refresh,
          [],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<void> updateNode(bool? shouldRefresh) => (super.noSuchMethod(
        Invocation.method(
          #updateNode,
          [shouldRefresh],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  bool validateAddress(String? address) => (super.noSuchMethod(
        Invocation.method(
          #validateAddress,
          [address],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i21.Future<bool> testNetworkConnection() => (super.noSuchMethod(
        Invocation.method(
          #testNetworkConnection,
          [],
        ),
        returnValue: _i21.Future<bool>.value(false),
      ) as _i21.Future<bool>);
  @override
  _i21.Future<void> recoverFromMnemonic({
    required String? mnemonic,
    String? mnemonicPassphrase,
    required int? maxUnusedAddressGap,
    required int? maxNumberOfIndexesToCheck,
    required int? height,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #recoverFromMnemonic,
          [],
          {
            #mnemonic: mnemonic,
            #mnemonicPassphrase: mnemonicPassphrase,
            #maxUnusedAddressGap: maxUnusedAddressGap,
            #maxNumberOfIndexesToCheck: maxNumberOfIndexesToCheck,
            #height: height,
          },
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<void> initializeNew() => (super.noSuchMethod(
        Invocation.method(
          #initializeNew,
          [],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<void> initializeExisting() => (super.noSuchMethod(
        Invocation.method(
          #initializeExisting,
          [],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<void> exit() => (super.noSuchMethod(
        Invocation.method(
          #exit,
          [],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<void> fullRescan(
    int? maxUnusedAddressGap,
    int? maxNumberOfIndexesToCheck,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fullRescan,
          [
            maxUnusedAddressGap,
            maxNumberOfIndexesToCheck,
          ],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
  @override
  _i21.Future<int> estimateFeeFor(
    int? satoshiAmount,
    int? feeRate,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #estimateFeeFor,
          [
            satoshiAmount,
            feeRate,
          ],
        ),
        returnValue: _i21.Future<int>.value(0),
      ) as _i21.Future<int>);
  @override
  _i21.Future<bool> generateNewAddress() => (super.noSuchMethod(
        Invocation.method(
          #generateNewAddress,
          [],
        ),
        returnValue: _i21.Future<bool>.value(false),
      ) as _i21.Future<bool>);
  @override
  _i21.Future<void> updateSentCachedTxData(Map<String, dynamic>? txData) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSentCachedTxData,
          [txData],
        ),
        returnValue: _i21.Future<void>.value(),
        returnValueForMissingStub: _i21.Future<void>.value(),
      ) as _i21.Future<void>);
}
